<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="peoples">
	<typeAlias alias="people" type="q.domain.People" />
	<resultMap id="peopleResult" class="people">
		<result property="id" column="id" />
		<result property="year" column="year" />
		<result property="month" column="month" />
		<result property="day" column="day" />
		<result property="gender" column="gender_id" typeHandler="q.dao.ibatis.GenderHandler" />
		<result property="bloodTypeId" column="blood_type_id" />
		<result property="educationId" column="education_id" />
		<result property="roleId" column="role_id" />
		<result property="countryCode" column="country_code" />
		<result property="districtId" column="district_id" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="loginToken" column="login_token" />
		<result property="realName" column="real_name" />
		<result property="intro" column="intro" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<resultMap id="peopleIdRealNameResult" class="people">
		<result property="id" column="id" />
		<result property="realName" column="real_name" />
	</resultMap>
	
	<typeAlias alias="relation" type="q.domain.PeopleRelation" />
	<resultMap id="relationResult" class="relation">
		<result property="id" column="id" />
		<result property="fromPeopleId" column="from_people_id" />
		<result property="toPeopleId" column="to_people_id" />
		<result property="status" column="status"
			typeHandler="q.dao.ibatis.PeopleRelationStatusHandler" />
		<result property="alias" column="alias" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>

	<sql id="people.columns">
		id,
		year,
		month,
		day,
		gender_id,
		blood_type_id,
		education_id,
		role_id,
		country_code,
		district_id,
		mobile,
		email,
		username,
		password,
		login_token,
		real_name,
		intro,
		status,
		created,
		modified
	</sql>
	<sql id="relation.columns">
		id,
		from_people_id,
		to_people_id,
		alias,
		status,
		created,
		modified
	</sql>

	<select id="getPeopleFollowingNumById" resultClass="int">
		select count(id) 
		from people_relation
		where status = 3
		and from_people_id = #value# 
	</select>

	<select id="getPeopleFollowerNumById" resultClass="int">
		select count(id)
		from people_relation
		where status = 3 
		and to_people_id = #value#
	</select>

	<select id="selectPeopleIdRealNamesByIds" resultMap="peopleIdRealNameResult">
		select
		id, real_name
		from people
		where id in
		<iterate open="(" close=")" conjunction=",">
			#[]#
        </iterate>
	</select>

	<select id="selectPeopleById" resultMap="peopleResult">
		select
		<include refid="people.columns" />
		from
		people
		where id=#value#
	</select>

	<select id="selectPeopleByUsername" resultMap="peopleResult">
		select
		<include refid="people.columns" />
		from
		people
		where username=#value#
	</select>

	<insert id="insertPeople">
		insert into people
		(
		<include refid="people.columns" />
		) values (
		#id#,
		#year#,
		#month#,
		#day#,
		#gender,handler=q.dao.ibatis.GenderHandler#,
		#bloodTypeId#,
		#educationId#,
		#roleId#,
		#countryCode#,
		#districtId#,
		#mobile#,
		#email#,
		#username#,
		#password#,
		#loginToken#,
		#realName#,
		#intro#,
		0,
		now(),
		null
		)
	</insert>

	<update id="updatePeopleById">
		update people set
		year = #year#,
		month =#month#,
		day=#day#,
		blood_type_id=#bloodTypeId#,
		education_id=#educationId#,
		role_id=#roleId#,
		country_code=#countryCode#,
		district_id=#districtId#,
		mobile=#mobile#
		where id=#id#
	</update>

	<update id="updatePeopleRelationStatusById">
		update people_relation set
		status =
		#status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		where id =
		#id#;
	</update>

	<update id="updatePeopleRelationStatusByFromIdToId">
		update people_relation set
		status =
		#status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		where
		from_people_id = #fromPeopleId#
		and to_people_id = #toPeopleId#;
	</update>

	<insert id="insertPeopleRelation">
		insert into people_relation
		(
		<include refid="relation.columns" />
		) values (
		#id#,
		#fromPeopleId#,
		#toPeopleId#,
		#alias#,
		#status,handler=q.dao.ibatis.PeopleRelationStatusHandler#,
		now(),
		null
		)
	</insert>

	<select id="selectPagePeopleRelation" resultMap="relationResult">
		select
		<include refid="relation.columns" />
		from people_relation
		<dynamic prepend="where">
			<isNotNull prepend="and" property="status">
				status = #status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
			</isNotNull>
			<isNotNull prepend="and" property="fromPeopleId">
				from_people_id = #fromPeopleId#
			</isNotNull>
			<isNotNull prepend="and" property="toPeopleId">
				to_people_id = #toPeopleId#
			</isNotNull>
			<isNotNull prepend="and" property="startCreated">
				created &lt;= #startCreated#
			</isNotNull>
			<isNotNull prepend="and" property="startId">
				id &lt;= #startId#
			</isNotNull>
		</dynamic>
		order by created desc
		limit #startIndex#, #size#
	</select>
	
	<select id="selectAllToPeopleIds" resultClass="long">
		select to_people_id
		from people_relation
		where status = #status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		and from_people_id = #fromPeopleId#
	</select>

	<select id="selectPeopleRelationByFromIdToId" resultMap="relationResult">
		select
		<include refid="relation.columns" />
		from people_relation
		where
		from_people_id = #fromPeopleId#
		and
		to_people_id = #toPeopleId#
	</select>
	
	<select id="selectEmailExists" resultClass="long">
		select
		id
		from 
		people
		where email=#value#
		
	</select>

</sqlMap>