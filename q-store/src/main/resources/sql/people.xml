<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="peoples">
	<typeAlias alias="people" type="q.domain.People" />
	<resultMap id="peopleResult" class="people">
		<result property="id" column="id" />
		<result property="year" column="year" />
		<result property="month" column="month" />
		<result property="day" column="day" />
		<result property="gender" column="gender_id" typeHandler="q.dao.ibatis.GenderHandler" />
		<result property="bloodTypeId" column="blood_type_id" />
		<result property="degree" column="degree_id" typeHandler="q.dao.ibatis.DegreeHandler" />
		<result property="roleId" column="role_id" />
		<result property="countryCode" column="country_code" />
		<result property="area" column="area_id" typeHandler="q.dao.ibatis.AreaHandler" />
		<result property="hometown" column="hometown_id" typeHandler="q.dao.ibatis.AreaHandler" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="loginToken" column="login_token" />
		<result property="realName" column="real_name" />
		<result property="url" column="url" />
		<result property="intro" column="intro" />
		<result property="avatarPath" column="avatar_path"/>
		<result property="weiboNum" column="weibo_num"/>
		<result property="followingNum" column="following_num"/>
		<result property="followerNum" column="follower_num"/>
		<result property="friendNum" column="friend_num"/>
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<resultMap id="peopleIdRealNameResult" class="people">
		<result property="id" column="id" />
		<result property="realName" column="real_name" />
	</resultMap>
    <resultMap id="peopleInterestResult" class="people">
		<result property="book" column="book" />
		<result property="film" column="film" />
		<result property="music" column="music" />
		<result property="idol" column="idol" />
		<result property="hope" column="hope" />
	</resultMap>
	<typeAlias alias="relation" type="q.domain.PeopleRelation" />
	<resultMap id="relationResult" class="relation">
		<result property="id" column="id" />
		<result property="fromPeopleId" column="from_people_id" />
		<result property="toPeopleId" column="to_people_id" />
		<result property="status" column="status"
			typeHandler="q.dao.ibatis.PeopleRelationStatusHandler" />
		<result property="alias" column="alias" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>

	<sql id="people.columns">
		id,
		year,
		month,
		day,
		gender_id,
		blood_type_id,
		degree_id,
		role_id,
		country_code,
		area_id,
		hometown_id,
		mobile,
		email,
		username,
		password,
		login_token,
		real_name,
		url,
		intro,
		avatar_path,
		weibo_num,
		following_num,
		follower_num,
		friend_num,
		status,
		created,
		modified
	</sql>
	<sql id="relation.columns">
		id,
		from_people_id,
		to_people_id,
		alias,
		status,
		created,
		modified
	</sql>
	<sql id="interest.columns">
		book,
		film,
		music,
		idol,
		hope
	</sql>

	<select id="selectPeopleFollowingNumById" resultClass="int">
		select
		count(id)
		from people_relation
		where status = 3
		and from_people_id = #value#
	</select>
    <select id="selectPasswordById" resultClass="String">
        select password
        from people
        where id=#value#
    </select>
	<select id="selectPeopleFollowerNumById" resultClass="int">
		select
		count(id)
		from people_relation
		where status = 3
		and to_people_id = #value#
	</select>

	<select id="selectPeopleIdRealNamesByIds" resultMap="peopleIdRealNameResult">
		select
		id, real_name
		from people
		where id in
		<iterate open="(" close=")" conjunction=",">
			#[]#
        </iterate>
	</select>

	<insert id="insertPeople">
		insert into people
		(
		<include refid="people.columns" />
		) values (
		#id#,
		#year#,
		#month#,
		#day#,
		#gender,handler=q.dao.ibatis.GenderHandler#,
		#bloodTypeId#,
		#degree,handler=q.dao.ibatis.DegreeHandler#,
		#roleId#,
		#countryCode#,
		#area,handler=q.dao.ibatis.AreaHandler#,
		#hometown,handler=q.dao.ibatis.AreaHandler#,
		#mobile#,
		#email#,
		#username#,
		#password#,
		#loginToken#,
		#realName#,
		#url#,
		#intro#,
		#avatarPath#,
		#weiboNum#,
		#followingNum#,
		#followerNum#,
		#friendNum#,
		0,
		now(),
		null
		)
	</insert>

	<update id="updatePeopleById">
		update people
		<dynamic prepend="set">
			<isGreaterThan prepend="," property="year" compareValue="0">
	           	year = #year#
	        </isGreaterThan>
			<isGreaterThan prepend="," property="month" compareValue="0">
				month =#month#
			</isGreaterThan>
			<isGreaterThan prepend="," property="day" compareValue="0">
				day=#day#
			</isGreaterThan>
			<isNotNull prepend="," property="degree">
				degree_id=#degree,handler=q.dao.ibatis.DegreeHandler#
			</isNotNull>
			<isNotNull prepend="," property="gender">
				gender_id=#gender,handler=q.dao.ibatis.GenderHandler#
			</isNotNull>
			<isNotNull prepend="," property="area">
				area_id=#area,handler=q.dao.ibatis.AreaHandler#
			</isNotNull>
			<isNotNull prepend="," property="password">
				password=#password#
			</isNotNull>
			<isNotNull prepend="," property="area">
				hometown_id=#hometown,handler=q.dao.ibatis.AreaHandler#
			</isNotNull>
			<isNotNull prepend="," property="url">
				url=#url#
			</isNotNull>
			<isNotNull prepend="," property="intro">
				intro=#intro#
			</isNotNull>
			<isNotNull prepend="," property="avatarPath">
				avatar_path=#avatarPath#
			</isNotNull>
		    <isNotNull prepend="," property="realName">
				real_name=#realName#
			</isNotNull>
			<isGreaterThan prepend="," property="mobile" compareValue="0">
				mobile=#mobile#
			</isGreaterThan>
		</dynamic>
		where id=#id#
	</update>

	<update id="updatePeopleRelationStatusById">
		update people_relation set
		status = #status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		where
		id = #id#
		and status = #oldStatus,handler=q.dao.ibatis.PeopleRelationStatusHandler#
	</update>

	<update id="updatePeopleRelationStatusByFromIdToId">
		update people_relation set
		status = #status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		where
		from_people_id = #fromPeopleId#
		and to_people_id = #toPeopleId#
		and status = #oldStatus,handler=q.dao.ibatis.PeopleRelationStatusHandler#
	</update>

	<insert id="insertPeopleRelation">
		insert into people_relation
		(
		<include refid="relation.columns" />
		) values (
		#id#,
		#fromPeopleId#,
		#toPeopleId#,
		#alias#,
		#status,handler=q.dao.ibatis.PeopleRelationStatusHandler#,
		now(),
		null
		)
	</insert>

	<select id="selectAllToPeopleIds" resultClass="long">
		select
		to_people_id
		from people_relation
		where status =
		#status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
		and
		from_people_id = #fromPeopleId#
	</select>

	<select id="selectPeopleRelationByFromIdToId" resultMap="relationResult">
		select
		<include refid="relation.columns" />
		from people_relation
		where
		from_people_id = #fromPeopleId#
		and
		to_people_id = #toPeopleId#
	</select>

	<select id="selectPeopleRelationsByPage" resultMap="relationResult">
		select
		<include refid="relation.columns" />
		from people_relation
		<dynamic prepend="where">
			<isNotNull prepend="and" property="status">
				status = #status,handler=q.dao.ibatis.PeopleRelationStatusHandler#
			</isNotNull>
			<isNotNull prepend="and" property="fromPeopleId">
				from_people_id = #fromPeopleId#
			</isNotNull>
			<isNotNull prepend="and" property="toPeopleId">
				to_people_id = #toPeopleId#
			</isNotNull>
			<isNotNull prepend="and" property="toPeopleIds">
				to_people_id in
				<iterate property="toPeopleIds" open="(" close=")" conjunction=",">
					#toPeopleIds[]#
        		</iterate>
			</isNotNull>
			<isNotNull prepend="and" property="startCreated">
				created &lt;= #startCreated#

			</isNotNull>
			<isNotNull prepend="and" property="startId">
				id &lt; #startId#
			</isNotNull>
		</dynamic>
		<isNotNull property="size">
				order by id desc limit #startIndex#, #size#
		</isNotNull>
	</select>

	<select id="selectPeoplesByPage" resultMap="peopleResult">
		select
		<include refid="people.columns" />
		from people
		<dynamic prepend="where">
			<isNotNull prepend="and" property="id">
				id = #id#
			</isNotNull>
			<isNotNull prepend="and" property="ids">
				id in
				<iterate property="ids" open="(" close=")" conjunction=",">
					#ids[]#
        		</iterate>
			</isNotNull>
			<isNotNull prepend="and" property="username">
				username = #username#
			</isNotNull>
			<isNotNull prepend="and" property="password">
				password = #password#
			</isNotNull>
			<isNotNull prepend="and" property="email">
				email = #email#
			</isNotNull>
			<isNotNull prepend="and" property="area">
				area_id = #area,handler=q.dao.ibatis.AreaHandler#
			</isNotNull>
		</dynamic>
		<isNotNull property="size">
				order by id desc limit #startIndex#, #size#
		</isNotNull>
	</select>
    <select id="selectPeopleInterestsById" resultMap="peopleInterestResult">
		select
		<include refid="interest.columns" />
		from people
	   where id = #id#
	</select>
	<update id="updatePeopleInterestsById">
		update people
		<dynamic prepend="set">
			<isNotNull prepend="," property="book">
				book=#book#
			</isNotNull>
			<isNotNull prepend="," property="film">
				film=#film#
			</isNotNull>
			<isNotNull prepend="," property="music">
				music=#music#
			</isNotNull>
			<isNotNull prepend="," property="idol">
				idol=#idol#
			</isNotNull>
			<isNotNull prepend="," property="hope">
				hope=#hope#
			</isNotNull>
			</dynamic>
		       where id=#id#
	</update>
	<update id="decrPeopleWeiboNumberByPeopleId">
		update people set weibo_num = greatest(0, weibo_num - 1) where id = #value#
	</update>
	<update id="incrPeopleWeiboNumberByPeopleId">
		update people set weibo_num = weibo_num + 1 where id = #value#
	</update>
	<update id="decrPeopleFollowingNumberByPeopleId">
		update people set following_num = greatest(0, following_num - 1) where id = #value#
	</update>
	<update id="incrPeopleFollowingNumberByPeopleId">
		update people set following_num = following_num + 1 where id = #value#
	</update>
	<update id="decrPeopleFollowerNumberByPeopleId">
		update people set follower_num = greatest(0, follower_num - 1) where id = #value#
	</update>
	<update id="incrPeopleFollowerNumberByPeopleId">
		update people set follower_num = follower_num + 1 where id = #value#
	</update>
	<update id="decrPeopleFriendNumberByPeopleId">
		update people set friend_num = greatest(0, friend_num - 1) where id = #value#
	</update>
	<update id="incrPeopleFriendNumberByPeopleId">
		update people set friend_num = friend_num + 1 where id = #value#
	</update>
	<update id="updatePasswordByPeopleId">
		update people set password = #password# where id = #id#
	</update>
</sqlMap>