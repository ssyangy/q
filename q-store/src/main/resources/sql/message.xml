<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="messages">
	<typeAlias alias="message" type="q.domain.Message" />
	<resultMap id="messageResult" class="message">
		<result property="id" column="id" />
		<result property="senderId" column="sender_id" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="message.columns">
		id,
		sender_id,
		status,
		created,
		modified
	</sql>
	<select id="selectMessageById" resultMap="messageResult">
		select
		<include refid="message.columns" />
		from message
		where id = #value#
	</select>

	<select id="selectMessagesByPage" resultMap="messageResult">
		select
		<include refid="message.columns" />
		from message
		where
		status = 0
		<isNotNull prepend="and " property="ids">
			id in
			<iterate property="ids" open="(" close=")" conjunction=",">
				#ids[]#
        	</iterate>
	    </isNotNull>
		<isNotNull prepend="and" property="startCreated">
			created &lt;= #startCreated#
		</isNotNull>
		<isNotNull prepend="and" property="startId">
			id &lt;= #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>

	<insert id="insertMessage">
		insert into message
		(
		<include refid="message.columns" />
		) values (
		#id#,
		#senderId#,
		0,
		now(),
		null
		)
	</insert>

	<typeAlias alias="messageJoin" type="q.domain.MessageJoinPeople" />
	<resultMap id="messageJoinResult" class="messageJoin">
		<result property="id" column="id" />
		<result property="senderId" column="sender_id" />
		<result property="messageId" column="message_id" />
		<result property="receiverId" column="receiver_id" />
		<result property="replyNum" column="reply_num" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="messageJoin.columns">
		id,
		sender_id,
		message_id,
		receiver_id,
		reply_num,
		status,
		created,
		modified
	</sql>
	<select id="selectMessageJoinPeoplesByPage" resultMap="messageJoinResult">
		select
		<include refid="messageJoin.columns" />
		from message_join_people 
		where status = 0 and reply_num > 0
		<isNotNull prepend="and " property="receiverId">
			receiver_id = #receiverId#
		</isNotNull>
		<isNotNull prepend="and " property="messageIds">
			message_id in
			<iterate property="messageIds" open="(" close=")" conjunction=",">
				#messageIds[]#
        	</iterate>
	    </isNotNull>
		<isNotNull prepend="and" property="startCreated">
			created &lt;= #startCreated#
		</isNotNull>
		<isNotNull prepend="and" property="startId">
			id &lt;= #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>
	<select id="getMessageReceiverIdsByJoinPage" resultClass="long">
		select receiver_id from message_join_people
		where status = 0 and reply_num > 0
		<isNotNull prepend="and " property="receiverId">
			receiver_id = #receiverId#
		</isNotNull>
		<isNotNull prepend="and " property="messageIds">
			message_id in
			<iterate property="messageIds" open="(" close=")" conjunction=",">
				#messageIds[]#
        	</iterate>
	    </isNotNull>
		<isNotNull prepend="and" property="startCreated">
			created &lt;= #startCreated#
		</isNotNull>
		<isNotNull prepend="and" property="startId">
			id &lt;= #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>
	<select id="getMessageJoinPeopleByMessageIdAndReceiverIdAndStatus" resultMap="messageJoinResult">
		select
		<include refid="messageJoin.columns" />
		from message_join_people
		where status = #status# and message_id = #messageId# and receiver_id = #receiverId#
	</select>
	<insert id="insertMessageJoins" parameterClass="java.util.List">
		insert into message_join_people
		(
		<include refid="messageJoin.columns" />
		) values
		<iterate conjunction=",">
			(#[].id#, #[].senderId#, #[].messageId#, #[].receiverId#, #[].replyNum#, 0, now(), null)
        </iterate>
	</insert>
	<update id="updateMessageJoinPeopleReplyNumByMessageIdAndReceiverId">
		update message_join_people
		set reply_num = #replyNum#
		where message_id = #messageId# and receiver_id = #receiverId#
	</update>
	<update id="decrMessageReplyNumberByMessageIdAndReceiverId">
		update message_join_people set reply_num = reply_num + 1 where message_id = #value#
	</update>
	<update id="incrAllMessageReplyNumberByMessageId">
		update message_join_people set re
	</update>

	<typeAlias alias="messageReply" type="q.domain.MessageReply" />
	<resultMap id="messageReplyResult" class="messageReply">
		<result property="id" column="id" />
		<result property="senderId" column="sender_id" />
		<result property="quoteSenderId" column="quote_sender_id" />
		<result property="quoteMessageId" column="quote_message_id" />
		<result property="replySenderId" column="reply_sender_id" />
		<result property="replyMessageId" column="reply_message_id" />
		<result property="content" column="content" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="messageReply.columns">
		id,
		sender_id,
		quote_sender_id,
		quote_message_id,
		reply_sender_id,
		reply_message_id,
		content,
		status,
		created,
		modified
	</sql>
	<insert id="insertMessageReply">
		insert into message_reply
		(
		<include refid="messageReply.columns" />
		) values (
		#id#,
		#senderId#,
		#quoteSenderId#,
		#quoteMessageId#,
		#replySenderId#,
		#replyMessageId#,
		#content#,
		0,
		now(),
		null
		)
	</insert>
	<select id="selectMessageRepliesByPage" resultMap="messageReplyResult">
		select
		<include refid="messageReply.columns" />
		from message_reply
		where
		status = 0
		<isNotNull prepend="and " property="quoteMessageId">
			quote_message_id = #quoteMessageId#
	    </isNotNull>
	    <isNotNull prepend="and " property="ids">
			id in
			<iterate property="ids" open="(" close=")" conjunction=",">
				#ids[]#
        	</iterate>
	    </isNotNull>
		<isNotNull prepend="and" property="startCreated">
			created &lt;= #startCreated#
		</isNotNull>
		<isNotNull prepend="and" property="startId">
			id &lt;= #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>
	
	<typeAlias alias="messageReplyJoin" type="q.domain.MessageReplyJoinPeople" />
	<resultMap id="messageReplyJoinResult" class="messageReplyJoin">
		<result property="id" column="id" />
		<result property="replyId" column="reply_id" />
		<result property="senderId" column="sender_id" />
		<result property="receiverId" column="receiver_id" />
		<result property="quoteSenderId" column="quote_sender_id" />
		<result property="quoteMessageId" column="quote_message_id" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="messageReplyJoin.columns">
		id,
		reply_id,
		sender_id,
		receiver_id,
		quote_sender_id,
		quote_message_id,
		status,
		created,
		modified
	</sql>
	<insert id="insertMessageReplyJoin">
		insert into message_reply_join_people
		(
		<include refid="messageReplyJoin.columns" />
		) values (
		#id#,
		#replyId#
		#senderId#,
		#receiverId#,
		#quoteSenderId#,
		#quoteMessageId#,
		0,
		now(),
		null
		)
	</insert>
	<insert id="insertMessageReplyJoins" parameterClass="java.util.List">
		insert into message_reply_join_people
		(
		<include refid="messageReplyJoin.columns" />
		) values
		<iterate conjunction=",">
			(#[].id#, #[].replyId#, #[].senderId#, #[].receiverId#, #[].quoteSenderId#, #[].quoteMessageId#, 0, now(), null)
        </iterate>
	</insert>
	<update id="deleteAllMessageReplyJoinPeopleByQuoteMessageIdAndReceiverId">
		update message_reply_join_people
		set status = 1 
		where quote_message_id = #quoteMessageId# and receiver_id = #receiverId# 
	</update>
	<update id="deleteMessageReplyByIdAndReceiverId">
		update message_reply_join_people
		set status = 1
		where reply_id = #replyId# and receiver_id = #receiverId#
	</update>
	<select id="getMessageReplyIdsByJoinPage" resultClass="long">
		select reply_id
		from message_reply_join_people
		where
		status = 0
		<isNotNull prepend="and " property="messageId">
			message_id = #messageId#
	    </isNotNull>
		<isNotNull prepend="and" property="startCreated">
			created &lt;= #startCreated#
		</isNotNull>
		<isNotNull prepend="and" property="startId">
			id &lt;= #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>
</sqlMap>