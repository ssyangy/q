<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="groups">
	<typeAlias alias="group" type="q.domain.Group" />
	<typeAlias alias="pjg" type="q.domain.PeopleJoinGroup" />
	<resultMap id="groupResult" class="group">
		<result property="id" column="id" />
		<result property="creatorId" column="creator_id" />
		<result property="name" column="name" />
		<result property="intro" column="intro" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<resultMap id="groupIdNameResult" class="group">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	<resultMap id="pjgResult" class="pjg">
		<result property="id" column="id" />
		<result property="peopleId" column="people_id" />
		<result property="groupId" column="group_id" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>

	<sql id="group.columns">
		id,
		creator_id,
		name,
		intro,
		status,
		created,
		modified
	</sql>
	
	<select id="selectIdNamesByIds" resultMap="groupIdNameResult">
		select
		id, name
		from `group`
		where id in
		<iterate open="(" close=")" conjunction=",">
			#[]#
        </iterate>
	</select>
	
	<select id="selectGroupIdsByIds" resultClass="long">
		select
		id
		from `group`
		where id in
		<iterate open="(" close=")" conjunction=",">
			#[]#
        </iterate>
	</select>	
	
	<select id="selectGroupById" resultMap="groupResult">
		select
		<include refid="group.columns" />
		from `group`
		where id=#value#
	</select>

	<select id="selectGroupsByIds" resultMap="groupResult">
		select
		<include refid="group.columns" />
		from `group` 
		where id in
		<iterate open="(" close=")" conjunction=",">
			#[]#
        </iterate>
		order by created desc
	</select>
	
	<select id="selectGroupIdsByPeopleId" resultClass="long">
		select group_id 
		from people_join_group
		where
		people_id = #value#
	</select>

	<select id="selectNewGroups" resultMap="groupResult">
		select
		<include refid="group.columns" />
		from `group`
		order by created desc
		limit #value#;
	</select>

	<insert id="insertGroup">
		insert into `group`
		(
		<include refid="group.columns" />
		) values (
		#id#,
		#creatorId#,
		#name#,
		#intro#,
		0,
		now(),
		null
		)
	</insert>

	<insert id="insertGroupJoinCategory">
		insert into group_join_category
		(
		id,
		group_id,
		category_id,
		status,
		created,
		modified
		) values (
		#id#,
		#groupId#,
		#categoryId#,
		0,
		now(),
		null
		)
	</insert>

	<sql id="pjg.columns">
		id,
		people_id,
		group_id,
		status,
		created,
		modified
	</sql>

	<insert id="insertPeopleJoinGroup">
		insert into people_join_group
		(
		<include refid="pjg.columns" />
		) values (
		#id#,
		#peopleId#,
		#groupId#,
		0,
		now(),
		null
		)
	</insert>

	<update id="updatePeopleJoinGroupStatusByPeopleIdAndGroupId">
		update people_join_group set
		status = #status#,
		modified = null
		where
		people_id = #peopleId#
		and
		group_id = #groupId#
	</update>

	<select id="selectPeopleJoinGroupByPeopleIdAndGroupId"
		resultMap="pjgResult">
		select
		<include refid="pjg.columns" />
		from
		people_join_group
		where
		people_id=#peopleId#
		and
		group_id=#groupId#
	</select>


</sqlMap>