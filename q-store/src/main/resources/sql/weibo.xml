<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="weibos">
	<typeAlias alias="weibo" type="q.domain.Weibo" />
	<resultMap id="weiboResult" class="weibo">
		<result property="id" column="id" />
		<result property="senderId" column="sender_id" />
		<result property="quoteWeiboId" column="quote_weibo_id" />
		<result property="quoteSenderId" column="quote_sender_id" />
		<result property="replyWeiboId" column="reply_weibo_id" />
		<result property="replySenderId" column="reply_sender_id" />
		<result property="fromType" column="from_type" typeHandler="q.dao.ibatis.WeiboFromTypeHandler" />
		<result property="fromId" column="from_id" />
		<result property="content" column="content" />
		<result property="longitude" column="longitude" />
		<result property="latitude" column="latitude" />
		<result property="replyNum" column="reply_num" />
		<result property="retweetNum" column="retweet_num" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
		<result property="picturePath" column="picture_path" />
	</resultMap>
	<sql id="weibo.columns">
		id,
		sender_id,
		quote_weibo_id,
		quote_sender_id,
		reply_weibo_id,
		reply_sender_id,
		from_type,
		from_id,
		content,
		longitude,
		latitude,
		reply_num,
		retweet_num,
		status,
		created,
		modified,
		picture_path
	</sql>

	<select id="selectWeiboById" resultMap="weiboResult">
		select
		<include refid="weibo.columns" />
		from weibo
		where id = #value#
	</select>

	<select id="getPeopleWeiboNumByPeopleId" resultClass="int">
		select
		count(id) from weibo
		where sender_id = #value#
	</select>

	<select id="selectWeibosByIds" resultMap="weiboResult">
		select
		<include refid="weibo.columns" />
		from weibo
		where id in
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
		<isNotNull property="desc">
			order by id desc
		</isNotNull>
	</select>

	<select id="selectPageFollowingWeibos" resultMap="weiboResult">
		select
		<include refid="weibo.columns" />
		from weibo
		where status = 0
		and sender_id in
		<iterate property="senderIds" open="(" close=")" conjunction=",">
			#senderIds[]#
        </iterate>
		<isNotNull prepend="and " property="startId">
			id &lt; #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>

	<select id="selectPageWeibos" resultMap="weiboResult">
		select
		<include refid="weibo.columns" />
		from weibo
		where status = 0
		<isNotNull prepend="and " property="senderId">
			sender_id = #senderId#
		</isNotNull>
		<isNotNull prepend="and " property="startId">
			id &lt; #startId#
		</isNotNull>
		order by id desc
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>

	<insert id="insertWeibo">
		insert into weibo
		(
		<include refid="weibo.columns" />
		) values (
		#id#,
		#senderId#,
		#quoteWeiboId#,
		#quoteSenderId#,
		#replyWeiboId#,
		#replySenderId#,
		#fromType,handler=q.dao.ibatis.WeiboFromTypeHandler#,
		#fromId#,
		#content#,
		#longitude#,
		#latitude#,
		#replyNum#,
		#retweetNum#,
		0,
		now(),
		null,
		#picturePath#
		)
	</insert>

	<update id="deleteWeiboBySenderIdAndWeiboId">
		update weibo set
		status = 1
		where
		sender_id = #senderId#
		and id = #weiboId#
		and status = 0;
	</update>

	<update id="deleteWeiboByPage">
		update weibo set
		status = #newStatus#
		where
		id = #id#
		and status = #oldStatus#;
	</update>

	<update id="deleteWeiboJoinGroupsByPage">
		update weibo_join_group set
		status = #newStatus#
		where
		weibo_id = #weiboId#
		and status = #oldStatus#;
	</update>

	<typeAlias alias="wjg" type="q.domain.WeiboJoinGroup" />
	<resultMap id="wjgResult" class="wjg">
		<result property="id" column="id" />
		<result property="weiboId" column="weibo_id" />
		<result property="groupId" column="group_id" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="wjg.columns">
		id,
		weibo_id,
		sender_id,
		group_id,
		status,
		created,
		modified
	</sql>

	<update id="deleteWeiboReplyBySenderIdAndReplyId">
		update weibo_reply set
		status = 1
		where
		sender_id = #senderId#
		and id = #replyId#
		and status = 0;
	</update>

	<select id="selectWeiboIdsByWeiboJoinGroupPage" resultClass="long">
		select weibo_id
		from weibo_join_group
		<dynamic prepend="where ">
			<isNotNull prepend="and " property="status">
				status = #status#
			</isNotNull>
			<isNotNull prepend="and " property="groupIds">
				group_id in
				<iterate property="groupIds" open="(" close=")" conjunction=",">
					#groupIds[]#
	        	</iterate>
			</isNotNull>
			<isNotNull prepend="and " property="groupId">
				group_id = #groupId#
			</isNotNull>
			<isNotNull prepend="and " property="senderId">
				sender_id = #senderId#
			</isNotNull>
			<isNotNull prepend="and " property="startId">
				id &lt; #startId#
			</isNotNull>
		</dynamic>
		order by id desc
		limit #startIndex#, #size#
	</select>


	<select id="selectWeiboJoinGroupByWeiboIdGroupId" resultMap="wjgResult">
		select
		<include refid="wjg.columns" />
		from weibo_join_group
		where
		weibo_id = #weiboId#
		and group_id = #groupId#
	</select>

	<select id="selectWeiboJoinGroupByWeiboId" resultMap="wjgResult">
		select
		<include refid="wjg.columns" />
		from weibo_join_group
		where
		weibo_id = #weiboId#
	</select>

	<insert id="insertWeiboJoinGroup">
		insert into weibo_join_group
		(
		<include refid="wjg.columns" />
		) values (
		#id#,
		#weiboId#,
		#senderId#,
		#groupId#,
		0,
		now(),
		null
		)
	</insert>

	<typeAlias alias="reply" type="q.domain.WeiboReply" />
	<resultMap id="replyResult" class="reply">
		<result property="id" column="id" />
		<result property="senderId" column="sender_id" />
		<result property="quoteWeiboId" column="quote_weibo_id" />
		<result property="quoteSenderId" column="quote_sender_id" />
		<result property="replyWeiboId" column="reply_weibo_id" />
		<result property="replySenderId" column="reply_sender_id" />
		<result property="fromType" column="from_type" typeHandler="q.dao.ibatis.WeiboFromTypeHandler" />
		<result property="fromId" column="from_id" />
		<result property="content" column="content" />
		<result property="replyNum" column="reply_num" />
		<result property="retweetNum" column="retweet_num" />
		<result property="status" column="status" />
		<result property="created" column="created" />
		<result property="modified" column="modified" />
	</resultMap>
	<sql id="reply.columns">
		id,
		sender_id,
		quote_weibo_id,
		quote_sender_id,
		reply_weibo_id,
		reply_sender_id,
		from_type,
		from_id,
		content,
		reply_num,
		retweet_num,
		status,
		created,
		modified
	</sql>

	<select id="selectWeiboReplyById" resultMap="replyResult">
		select
		<include refid="reply.columns" />
		from weibo_reply
		where id = #value#
	</select>

	<select id="selectWeiboRepliesByIds" resultMap="replyResult">
		select
		<include refid="reply.columns" />
		from weibo_reply
		where id in
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
		<isNotNull property="desc">
			order by id desc
		</isNotNull>
	</select>


	<select id="selectPageWeiboReply" resultMap="replyResult">
		select
		<include refid="reply.columns" />
		from weibo_reply
		where status = 0
		<isNotNull prepend="and " property="quoteWeiboId">
			quote_weibo_id = #quoteWeiboId#
			</isNotNull>
		<isNotNull prepend="and " property="quoteSenderId">
			quote_sender_id = #quoteSenderId#
			and sender_id != #quoteSenderId#
		</isNotNull>
		<isNotNull prepend="and " property="quoteSenderIds">
			quote_sender_id in
			<iterate property="quoteSenderIds" open="(" close=")" conjunction=",">
				#quoteSenderIds[]#
		        </iterate>
		</isNotNull>
		<isNotNull prepend="and " property="senderId">
			sender_id = #senderId#
			</isNotNull>
		<isNotNull prepend="and " property="startId">
			<isEqual property="desc" compareValue="true">
				id &lt; #startId#
				</isEqual>
			<isEqual property="desc" compareValue="false">
				id &gt; #startId#
				</isEqual>
		</isNotNull>
		order by id
		<isNotNull property="desc" prepend=" ">
			<isEqual property="desc" compareValue="true">
				desc
			</isEqual>
			<isEqual property="desc" compareValue="false">
				asc
			</isEqual>
		</isNotNull>
		<isNotNull property="size">
			limit #startIndex#, #size#
		</isNotNull>
	</select>

	<insert id="insertWeiboReply">
		insert into weibo_reply
		(
		<include refid="reply.columns" />
		) values (
		#id#,
		#senderId#,
		#quoteWeiboId#,
		#quoteSenderId#,
		#replyWeiboId#,
		#replySenderId#,
		#fromType,handler=q.dao.ibatis.WeiboFromTypeHandler#,
		#fromId#,
		#content#,
		#replyNum#,
		#retweetNum#,
		0,
		now(),
		null
		)
	</insert>

	<update id="incrWeiboRetweetNumByWeiboId">
		update weibo set retweet_num = retweet_num + 1 where id = #value#
	</update>
	<update id="decrWeiboRetweetNumByWeiboId">
		update weibo set retweet_num = greatest(0, retweet_num - 1) where id = #value#
	</update>

	<update id="incrWeiboReplyNumByReplyId">
		update weibo set reply_num = reply_num + 1 where id = #value#
	</update>
	<update id="decrWeiboReplyNumByReplyId">
		update weibo set reply_num = greatest(0, reply_num - 1) where id = #value#
	</update>
</sqlMap>